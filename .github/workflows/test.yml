name: API Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NODE_ENV: test
  JWT_SECRET: "your_ultra_secure_jwt_secret_key_change_this_in_production"
  DATABASE_URL: "postgres://test:test@localhost:5432/test"
  FRONTEND_URL: "http://localhost:3000"
  PORT: 5000

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client jq curl
          npm ci

      - name: Verify PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U test -d test && break
            sleep 2
          done

      - name: Run migrations
        run: npm run migrate

      - name: Start server with debug
        run: |
          echo pwd
          pwd
          npm install
          npm run dev > server.log 2>&1 &
          sleep 10
          echo "=== Server logs ==="
          cat server.log
          echo "=== Checking server status ==="
          curl -v http://localhost:5000 || true

      - name: Run tests with debug
        run: |
          chmod +x ./tests/test_api.sh
          export BASE_URL="http://localhost:$PORT"
          echo "=== Running tests ==="
          ./tests/test_api.sh | tee test-output.log
          if grep -q "ERROR" test-output.log; then
            echo "=== Test output ==="
            cat test-output.log
            echo "::error::Tests failed"
            exit 1
          fi

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            server.log
            test-output.log
